import logging
import os
from dotenv import load_dotenv
from aiogram import Bot, Dispatcher, F
from aiogram.types import Message

from telegram_groups import TELEGRAM_GROUPS_TO_ACCOUNT
from creatio_api import create_or_get_chat, post_message

# –õ–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

load_dotenv()

bot = Bot(token=os.getenv("TELEGRAM_BOT_TOKEN"))
dp = Dispatcher()

@dp.message()
async def handle_group_message(message: Message):
    logger.info(f"üëâ –û—Ç—Ä–∏–º–∞–Ω–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ –≥—Ä—É–ø—ñ {message.chat.id}: {message.text}")
    
    if message.chat.id in TELEGRAM_GROUPS_TO_ACCOUNT:
        account_id = TELEGRAM_GROUPS_TO_ACCOUNT[message.chat.id]
        author_name = f"{message.from_user.first_name or ''} {message.from_user.last_name or ''}".strip()
        text = message.text

        logger.info(f"üìå –ó–Ω–∞–π–¥–µ–Ω–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å group_id={message.chat.id} -> account_id={account_id}")
        logger.info(f"‚úç –ê–≤—Ç–æ—Ä: {author_name}")

        chat_id = await create_or_get_chat(account_id, message.chat.id)
        logger.info(f"üí¨ –û—Ç—Ä–∏–º–∞–Ω–∏–π –∞–±–æ —Å—Ç–≤–æ—Ä–µ–Ω–∏–π ChatId –≤ Creatio: {chat_id}")

        await post_message(chat_id, author_name, text)
        logger.info(f"‚úÖ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è '{text}' –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Creatio")

        await message.reply("‚úÖ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø–µ—Ä–µ–¥–∞–Ω–æ –≤ Creatio")
    else:
        logger.warning(f"‚ö† –ì—Ä—É–ø–∞ {message.chat.id} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞ —É TELEGRAM_GROUPS_TO_ACCOUNT. –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ–ø—É—â–µ–Ω–æ.")

def setup_bot():
    return dp
